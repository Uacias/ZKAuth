name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: frontend/.cargo/registry  
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('frontend/**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index
      uses: actions/cache@v3
      with:
        path: frontend/.cargo/git  
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('frontend/**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache target directory
      uses: actions/cache@v3
      with:
        path: frontend/target  
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('frontend/**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-

    - name: Cache Cargo registry backend
      uses: actions/cache@v3
      with:
        path: backend/.cargo/registry  
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('backend/**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index backend
      uses: actions/cache@v3
      with:
        path: backend/.cargo/git 
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('backend/**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache target directory backend
      uses: actions/cache@v3
      with:
        path: backend/target  
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('backend/**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install dependencies
      run: |
        cd frontend && rustup component add clippy rustfmt
        cd ../backend && rustup component add clippy rustfmt

    - name: Check formatting
      run: |
        cd frontend && cargo fmt -- --check
        cd ../backend && cargo fmt -- --check

    - name: Run Clippy
      run: |
        cd frontend && cargo clippy -- -D warnings
        cd ../backend && cargo clippy -- -D warnings

    - name: Build frontend
      run: cd frontend && cargo build --release

    - name: Build backend
      run: cd backend && cargo build --release

    - name: Run tests frontend
      run: cd frontend && cargo test --release

    - name: Run tests backend
      run: cd backend && cargo test --release
